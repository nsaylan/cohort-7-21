AWSTemplateFormatVersion: 2010-09-09

Description: >
  This Cloudformation Template creates 2 Tomcat Server (Stage and Production) on EC2 Instance. 


Parameters:
  KeyPairName:
    Description: Enter the name of your Key Pair for SSH connections.
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must one of the existing EC2 KeyPair

Resources:
  TomcatServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH and HTTP for Tomcat Server
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
  TomcatServerStage:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0aeeebd8d2ab47354
      InstanceType: t2.micro
      KeyName: !Ref KeyPairName
      SecurityGroupIds:
        - !GetAtt TomcatServerSecurityGroup.GroupId
      Tags:                
        -                        
          Key: Name
          Value: !Sub davids-staging-${AWS::StackName}   
      UserData:
        Fn::Base64: |
          #! /bin/bash
          yum update -y
          yum install java-1.8.0-openjdk -y
          yum install unzip wget -y
          cd /tmp
          wget https://downloads.apache.org/tomcat/tomcat-8/v8.5.66/bin/apache-tomcat-8.5.66.zip
          unzip apache-tomcat-8.5.66.zip
          mv apache-tomcat-8.5.66 /opt/tomcat
          chmod +x /opt/tomcat/bin/*
          touch /etc/systemd/system/tomcat.service

          chmod 664 /etc/systemd/system/tomcat.service

          echo '[Unit]
          Description=Apache Tomcat Web Application Container
          After=syslog.target network.target
          
          [Service]
          Type=forking
          
          Environment=JAVA_HOME=/usr/lib/jvm/jre
          Environment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid
          Environment=CATALINA_HOME=/opt/tomcat
          Environment=CATALINA_BASE=/opt/tomcat
          Environment="CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC"
          Environment="JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom"
          
          ExecStart=/opt/tomcat/bin/startup.sh
          ExecStop=/opt/tomcat/bin/shutdown.sh
          
          [Install]
          WantedBy=multi-user.target
          ' | sudo tee /etc/systemd/system/tomcat.service
          sudo systemctl daemon-reload
          sudo systemctl enable tomcat 
          sudo systemctl start tomcat 
  TomcatServerProduction:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0aeeebd8d2ab47354
      InstanceType: t2.micro
      KeyName: !Ref KeyPairName
      SecurityGroupIds:
        - !GetAtt TomcatServerSecurityGroup.GroupId
      Tags:                
        -                        
          Key: Name
          Value: !Sub davids-production-${AWS::StackName}   
      UserData:
        Fn::Base64: |
          #! /bin/bash
          yum update -y
          yum install java-1.8.0-openjdk -y
          yum install unzip wget -y
          cd /tmp
          wget https://downloads.apache.org/tomcat/tomcat-8/v8.5.65/bin/apache-tomcat-8.5.65.zip
          unzip apache-tomcat-8.5.65.zip
          mv apache-tomcat-8.5.65 /opt/tomcat
          chmod +x /opt/tomcat/bin/*
          touch /etc/systemd/system/tomcat.service

          chmod 664 /etc/systemd/system/tomcat.service

          echo '[Unit]
          Description=Apache Tomcat Web Application Container
          After=syslog.target network.target
          
          [Service]
          Type=forking
          
          Environment=JAVA_HOME=/usr/lib/jvm/jre
          Environment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid
          Environment=CATALINA_HOME=/opt/tomcat
          Environment=CATALINA_BASE=/opt/tomcat
          Environment="CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC"
          Environment="JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom"
          
          ExecStart=/opt/tomcat/bin/startup.sh
          ExecStop=/opt/tomcat/bin/shutdown.sh
          
          [Install]
          WantedBy=multi-user.target
          ' | sudo tee /etc/systemd/system/tomcat.service
          sudo systemctl daemon-reload
          sudo systemctl enable tomcat 
          sudo systemctl start tomcat 
Outputs:
  TomcatServerStage:
    Description: Tomcat Server Stage DNS Name
    Value: !Sub 
      - ${PublicAddress}
      - PublicAddress: !GetAtt TomcatServerStage.PublicDnsName
  TomcatServerProduction:
    Description: Tomcat Server Production DNS Name
    Value: !Sub 
      - ${PublicAddress}
      - PublicAddress: !GetAtt TomcatServerProduction.PublicDnsName
